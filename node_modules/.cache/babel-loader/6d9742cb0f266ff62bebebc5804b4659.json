{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/Documents/session_projects/Contact-Manager/src/components/contacts/Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport Contact from \"./Contact\";\nimport { clearAllContact, selectAllContact, deleteAllContact } from \"../../actions/contactAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contacts = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [selectAll, setSelectAll] = useState(false);\n  const contacts = useSelector(state => state.contact.contacts);\n  const selectedContacts = useSelector(state => state.contact.selectedContacts);\n  useEffect(() => {\n    if (selectAll) {\n      dispatch(selectAllContact(contacts.map(contact => contact.id)));\n    } else {\n      dispatch(clearAllContact());\n    }\n  }, [selectAll]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [selectedContacts.length > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger mb-3\",\n      onClick: () => dispatch(deleteAllContact()),\n      children: \"delete all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-control custom-checkbox\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"selectAll\",\n                type: \"checkbox\",\n                className: \"custom-control-input\",\n                value: selectAll,\n                onClick: () => setSelectAll(!selectAll)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"selectAll\",\n                className: \"custom-control-label\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: contacts.map(contact => /*#__PURE__*/_jsxDEV(Contact, {\n          contact: contact,\n          selectAll: selectAll\n        }, contact.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contacts, \"fJKdq6hkEQKI01ZQywBzdrE5aWM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["/home/lenovo/Documents/session_projects/Contact-Manager/src/components/contacts/Contacts.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useParams","Contact","clearAllContact","selectAllContact","deleteAllContact","Contacts","dispatch","selectAll","setSelectAll","contacts","state","contact","selectedContacts","map","id","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACEC,eADF,EAEEC,gBAFF,EAGEC,gBAHF,QAIO,6BAJP;;;AAMA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMa,QAAQ,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcF,QAAxB,CAA5B;AACA,QAAMG,gBAAgB,GAAGd,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcC,gBAAxB,CAApC;AACAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,SAAJ,EAAe;AACbD,MAAAA,QAAQ,CAACH,gBAAgB,CAACM,QAAQ,CAACI,GAAT,CAAaF,OAAO,IAAIA,OAAO,CAACG,EAAhC,CAAD,CAAjB,CAAR;AACD,KAFD,MAEO;AACLR,MAAAA,QAAQ,CAACJ,eAAe,EAAhB,CAAR;AACD;AACF,GANQ,EAMN,CAACK,SAAD,CANM,CAAT;AAQA,sBACE;AAAA,eACGK,gBAAgB,CAACG,MAAjB,GAA0B,CAA1B,gBACC;AACE,MAAA,SAAS,EAAC,qBADZ;AAEE,MAAA,OAAO,EAAE,MAAMT,QAAQ,CAACF,gBAAgB,EAAjB,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAOG,IARN,eASE;AAAO,MAAA,SAAS,EAAC,cAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,gCAAf;AAAA,sCACE;AACE,gBAAA,EAAE,EAAC,WADL;AAEE,gBAAA,IAAI,EAAC,UAFP;AAGE,gBAAA,SAAS,EAAC,sBAHZ;AAIE,gBAAA,KAAK,EAAEG,SAJT;AAKE,gBAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,CAACD,SAAF;AAL7B;AAAA;AAAA;AAAA;AAAA,sBADF,eAQE;AACE,gBAAA,OAAO,EAAC,WADV;AAEE,gBAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,sBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAwBE;AAAA,kBACGE,QAAQ,CAACI,GAAT,CAAaF,OAAO,iBACnB,QAAC,OAAD;AAAS,UAAA,OAAO,EAAEA,OAAlB;AAA4C,UAAA,SAAS,EAAEJ;AAAvD,WAAgCI,OAAO,CAACG,EAAxC;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CAvDD;;GAAMT,Q;UACaN,W,EAEAD,W,EACQA,W;;;KAJrBO,Q;AAyDN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport Contact from \"./Contact\";\r\nimport {\r\n  clearAllContact,\r\n  selectAllContact,\r\n  deleteAllContact,\r\n} from \"../../actions/contactAction\";\r\n\r\nconst Contacts = () => {\r\n  const dispatch = useDispatch();\r\n  const [selectAll, setSelectAll] = useState(false);\r\n  const contacts = useSelector(state => state.contact.contacts);\r\n  const selectedContacts = useSelector(state => state.contact.selectedContacts);\r\n  useEffect(() => {\r\n    if (selectAll) {\r\n      dispatch(selectAllContact(contacts.map(contact => contact.id)));\r\n    } else {\r\n      dispatch(clearAllContact());\r\n    }\r\n  }, [selectAll]);\r\n\r\n  return (\r\n    <div>\r\n      {selectedContacts.length > 0 ? (\r\n        <button\r\n          className=\"btn btn-danger mb-3\"\r\n          onClick={() => dispatch(deleteAllContact())}\r\n        >\r\n          delete all\r\n        </button>\r\n      ) : null}\r\n      <table className=\"table shadow\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              <div className=\"custom-control custom-checkbox\">\r\n                <input\r\n                  id=\"selectAll\"\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  value={selectAll}\r\n                  onClick={() => setSelectAll(!selectAll)}\r\n                />\r\n                <label\r\n                  htmlFor=\"selectAll\"\r\n                  className=\"custom-control-label\"\r\n                ></label>\r\n              </div>\r\n            </th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Phone</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {contacts.map(contact => (\r\n            <Contact contact={contact} key={contact.id} selectAll={selectAll} />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n"]},"metadata":{},"sourceType":"module"}